#!/bin/sh

# Welcome to the thoughtbot laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

append_to_bashrc() {
  local text="$1"
  local skip_new_line="${2:-0}"

  bashrc="$HOME/.bashrc"

  if ! grep -Fqs "$text" "$bashrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$bashrc"
    else
      printf "\n%s\n" "$text" >> "$bashrc"
    fi
  fi
}

# # shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -f "$HOME/.bash_profile" ]; then
  touch "$HOME/.bash_profile"
fi

printf "if [ -f ~/.bashrc ]; then\n . ~/.bashrc\nfi" > "$HOME/.bash_profile"

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

# shellcheck disable=SC2016
append_to_bashrc 'export PATH="$HOME/.bin:$PATH"'

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      brew upgrade "$@"
    fi
  else
    brew install "$@"
  fi
}

brew_is_installed() {
  local name
  name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$name"
}

brew_is_upgradable() {
  local name
  name="$(brew_expand_alias "$1")"

  ! brew outdated --quiet "$name" >/dev/null
}

brew_tap() {
  brew tap "$1" --repair 2> /dev/null
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/.*\//, ""); gsub(/:/, ""); print $1}'
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
    rbenv rehash
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_bashrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_bashrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

brew update

fancy_echo "Installing required packages..."
brew_install_or_upgrade 'git'
brew_install_or_upgrade 'node'
brew_install_or_upgrade 'phantomjs'

fancy_echo "Tapping some required formulae..."
brew_tap 'homebrew/versions'
brew_tap 'homebrew/dupes'

fancy_echo "Installing GCC 4.2..."
brew install homebrew/dupes/apple-gcc42
sudo ln -nsf $(which gcc-4.2) /usr/bin/gcc-4.2

fancy_echo "Installing MySQL 5.6..."
brew install mysql56

if [ ! -f '/etc/my.cnf' ]; then
  fancy_echo "Manual edits to /etc/my.cnf required. See: https://confluence.wishabi.com/pages/viewpage.action?pageId=18253291"
  cp /usr/local/Cellar/mysql56/5.6.29/support-files/my-default /etc/my.cnf
fi

append_to_bashrc 'export PATH="/usr/local/mysql/bin":$PATH'
append_to_bashrc 'export DYLD_LIBRARY_PATH="/usr/local/mysql/lib:$DYLD_LIBRARY_PATH"'
fancy_echo mysql --version

if ! command -v search >/dev/null; then
  fancy_echo "Installing Sphinx..."
  cd ~/Downloads && { curl --remote-name http://sphinxsearch.com/files/sphinx-2.1.4-release.tar.gz; cd-;}
  tar xvf ~/Downloads/sphinx-2.1.4-release.tar.gz
  cd ~/Downloads/sphinx-2.1.4-release.tar.gz && { ./configure; make install; cd-;}
  fancy_echo search --version
fi

if [ ! -d "$HOME/.rvm/"]; then
  fancy_echo "Installing RVM..."
  bash -s master < <(curl -s https://raw.githubusercontent.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
fi

rvm install 2.0.0
rvm use 2.0.0
gem_install_or_update bundler

if [ ! -d "$HOME/.bash_it/" ]; then
  fancy_echo "Installing Bash-it..."
  git clone --depth=1 https://github.com/Bash-it/bash-it.git $HOME/.bash_it
  $HOME/.bash_it/install.sh
else
  bash-it update
fi

